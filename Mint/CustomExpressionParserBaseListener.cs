//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from CustomExpressionParser.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="ICustomExpressionParserListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public partial class CustomExpressionParserBaseListener : ICustomExpressionParserListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="CustomExpressionParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpr([NotNull] CustomExpressionParser.ExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CustomExpressionParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpr([NotNull] CustomExpressionParser.ExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CustomExpressionParser.number"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumber([NotNull] CustomExpressionParser.NumberContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CustomExpressionParser.number"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumber([NotNull] CustomExpressionParser.NumberContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CustomExpressionParser.singleQuotedString"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSingleQuotedString([NotNull] CustomExpressionParser.SingleQuotedStringContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CustomExpressionParser.singleQuotedString"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSingleQuotedString([NotNull] CustomExpressionParser.SingleQuotedStringContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CustomExpressionParser.doubleQuotedString"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDoubleQuotedString([NotNull] CustomExpressionParser.DoubleQuotedStringContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CustomExpressionParser.doubleQuotedString"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDoubleQuotedString([NotNull] CustomExpressionParser.DoubleQuotedStringContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CustomExpressionParser.backQuoteString"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBackQuoteString([NotNull] CustomExpressionParser.BackQuoteStringContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CustomExpressionParser.backQuoteString"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBackQuoteString([NotNull] CustomExpressionParser.BackQuoteStringContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CustomExpressionParser.backQuoteExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBackQuoteExpr([NotNull] CustomExpressionParser.BackQuoteExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CustomExpressionParser.backQuoteExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBackQuoteExpr([NotNull] CustomExpressionParser.BackQuoteExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CustomExpressionParser.anyChar"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnyChar([NotNull] CustomExpressionParser.AnyCharContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CustomExpressionParser.anyChar"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnyChar([NotNull] CustomExpressionParser.AnyCharContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CustomExpressionParser.char"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterChar([NotNull] CustomExpressionParser.CharContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CustomExpressionParser.char"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitChar([NotNull] CustomExpressionParser.CharContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CustomExpressionParser.escapedChar"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEscapedChar([NotNull] CustomExpressionParser.EscapedCharContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CustomExpressionParser.escapedChar"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEscapedChar([NotNull] CustomExpressionParser.EscapedCharContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
