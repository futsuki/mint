//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from CustomExpressionParser.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Mint.Internal {
#pragma warning disable 3021
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="CustomExpressionParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public interface ICustomExpressionParserVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="CustomExpressionParser.expList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpList([NotNull] CustomExpressionParser.ExpListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CustomExpressionParser.exp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExp([NotNull] CustomExpressionParser.ExpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CustomExpressionParser.plainTextArgument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPlainTextArgument([NotNull] CustomExpressionParser.PlainTextArgumentContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CustomExpressionParser.plainTextString"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPlainTextString([NotNull] CustomExpressionParser.PlainTextStringContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CustomExpressionParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLiteral([NotNull] CustomExpressionParser.LiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CustomExpressionParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentifier([NotNull] CustomExpressionParser.IdentifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CustomExpressionParser.number"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNumber([NotNull] CustomExpressionParser.NumberContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CustomExpressionParser.singleQuotedString"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSingleQuotedString([NotNull] CustomExpressionParser.SingleQuotedStringContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CustomExpressionParser.doubleQuotedString"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDoubleQuotedString([NotNull] CustomExpressionParser.DoubleQuotedStringContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CustomExpressionParser.backQuoteString"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBackQuoteString([NotNull] CustomExpressionParser.BackQuoteStringContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CustomExpressionParser.backQuoteExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBackQuoteExpr([NotNull] CustomExpressionParser.BackQuoteExprContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CustomExpressionParser.anyChar"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAnyChar([NotNull] CustomExpressionParser.AnyCharContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CustomExpressionParser.char"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitChar([NotNull] CustomExpressionParser.CharContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CustomExpressionParser.escapedChar"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEscapedChar([NotNull] CustomExpressionParser.EscapedCharContext context);
}
} // namespace Mint.Internal
